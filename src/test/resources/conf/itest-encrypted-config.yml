#This will create this metric in all the tiers, under this path. Please make sure to have a trailing |
#metricPrefix: "Custom Metrics|Amazon StorageGateway|"

#This will create it in specific Tier aka Component. Replace <COMPONENT_ID>. Please make sure to have a trailing |.
#To find out the COMPONENT_ID, please see the screen shot here https://docs.appdynamics.com/display/PRO42/Build+a+Monitoring+Extension+Using+Java

# Metric list can be found here : https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ak-metricscollected.html

metricPrefix: "Server|Component:<TIER_ID>|Custom Metrics|Amazon StorageGateway|"

accounts:
  - awsAccessKey: ""
    awsSecretKey: ""
    displayAccountName: ""
    regions: ["us-east-1"]

credentialsDecryptionConfig:
    enableDecryption: "false"
    encryptionKey:

proxyConfig:
    host:
    port:
    username:
    password:

# Filters based on dimensions, values accepts comma separated values and regex patterns. If `.*` is used, all are
# monitored and if empty, none are monitored.
dimensions:
  - name: "GatewayId"
    displayName: "Gateway Id"
    values: [".*"]
  - name: "VolumeId"
    displayName: "Volume Id"
    values: [".*"]

# Global metrics config for all accounts
metricsConfig:

    # By default, all metrics retrieved from cloudwatch are 'Average' values.
    # This option allows you to override the metric type.
    #
    # Allowed statTypes are: ave, max, min, sum, samplecount
    #
    # Note: Irrespective of the metric type, value will still be reported as
    # Observed value to the Controller
    includeMetrics:
       - name: "AvailabilityNotifications"
         alias: "Availability Notifications"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "CacheHitPercent"
         alias: "CacheHit Percent"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "CacheUsed"
         alias: "Cache Used"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1
       - name: "IndexEvictions"
         alias: "Index Evictions"
         statType: "sum"
         aggregationType: "AVERAGE"
         timeRollUpType: "AVERAGE"
         clusterRollUpType: "INDIVIDUAL"
         delta: false
         multiplier: 1

    metricsTimeRange:
      startTimeInMinsBeforeNow: 5
      endTimeInMinsBeforeNow: 0

    # Rate limit ( per second ) for GetMetricStatistics, default value is 400. https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/cloudwatch_limits.html
    getMetricStatisticsRateLimit: 400
    #
    # The max number of retry attempts for failed retryable requests
    # (ex: 5xx error responses from a service) or throttling errors
    #
    maxErrorRetrySize: 0

concurrencyConfig:
  noOfAccountThreads: 3
  noOfRegionThreadsPerAccount: 3
  noOfMetricThreadsPerRegion: 3
  #Thread timeout in seconds
  threadTimeOut: 30

#Allowed values are Basic and Detailed. Refer https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-cloudwatch-new.html for more information
# Basic will fire CloudWatch API calls every 5 minutes
# Detailed will fire CloudWatch API calls every 1 minutes
cloudWatchMonitoring: "Basic"
# If you want to run the extension with a further delay, comment the "cloudWatchMonitoring" above and use the following field
# which takes in the number of minutes after which the extension should call the cloudwatch metrics
#cloudWatchMonitoringInterval: 10

regionEndPoints:
  us-east-1 : monitoring.us-east-1.amazonaws.com
  us-east-2 : monitoring.us-east-2.amazonaws.com
  us-west-1 : monitoring.us-west-1.amazonaws.com
  us-west-2 : monitoring.us-west-2.amazonaws.com
  ap-northeast-1 : monitoring.ap-northeast-1.amazonaws.com
  ap-northeast-2: monitoring.ap-northeast-2.amazonaws.com
  ap-northeast-3 : monitoring.ap-northeast-3.amazonaws.com
  ap-south-1 : monitoring.ap-south-1.amazonaws.com
  ap-southeast-1 : monitoring.ap-southeast-1.amazonaws.com
  ap-southeast-2 : monitoring.ap-southeast-2.amazonaws.com
  ca-central-1 : monitoring.ca-central-1.amazonaws.com
  cn-north-1 : monitoring.cn-north-1.amazonaws.com.cn
  cn-northwest-1 : monitoring.cn-northwest-1.amazonaws.com.cn
  eu-central-1 : monitoring.eu-central-1.amazonaws.com
  eu-west-1 : monitoring.eu-west-1.amazonaws.com
  eu-west-2 : monitoring.eu-west-2.amazonaws.com
  eu-west-3 : monitoring.eu-west-3.amazonaws.com
  sa-east-1 : monitoring.sa-east-1.amazonaws.com
  us-gov-west-1 : monitoring.us-gov-west-1.amazonaws.com

controllerInfo:
  controllerHost: "controller"
  controllerPort: 8090
  account: "customer1"
  username: ""
  password: ""
  encryptedPassword: ""
  controllerSslEnabled: false
  enableOrchestration: false
  uniqueHostId: ""
  accountAccessKey: ""
  machinePath: ""
  simEnabled: true
  applicationName: ""
  tierName: ""
  nodeName: ""

encryptionKey: ""